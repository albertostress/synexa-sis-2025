services:
  escola-db:
    image: postgres:15-alpine
    container_name: escola-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: escola
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - escola-network

  escola-backend:
    build: 
      context: ./escola-backend
      dockerfile: Dockerfile.minimal
    container_name: escola-backend
    environment:
      - NODE_ENV=development
      - DATABASE_URL=postgres://postgres:postgres@escola-db:5432/escola
      - PLAYWRIGHT_SERVICE_URL=http://playwright-service:3333
    ports:
      - "3000:3000"
    depends_on:
      - escola-db
      - playwright-service
    networks:
      - escola-network
    restart: unless-stopped

  escola-frontend:
    container_name: escola-frontend
    build:
      context: ./escola-frontend
    ports:
      - "3001:3001"
    environment:
      - VITE_API_BASE_URL=${API_URL:-http://localhost:3000}
    networks:
      - escola-network
    # depends_on:
    #   - escola-backend
    restart: unless-stopped

  playwright-service:
    container_name: playwright-service
    build:
      context: ./playwright-service
      dockerfile: Dockerfile.alpine
    ports:
      - "3333:3333"
    environment:
      - NODE_ENV=production
    networks:
      - escola-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "-q", "--spider", "http://localhost:3333/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: node server-alpine.js

volumes:
  pgdata:

networks:
  escola-network:
    driver: bridge