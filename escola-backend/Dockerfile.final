# Final Working Dockerfile for Dokploy
FROM node:18-alpine

# Install dependencies for building
RUN apk add --no-cache \
    curl \
    postgresql-client \
    python3 \
    make \
    g++ \
    bash

WORKDIR /app

# Copy package files first
COPY package*.json ./
COPY tsconfig*.json ./

# Install dependencies (including dev for build)
RUN npm install

# Copy prisma schema
COPY prisma ./prisma

# Generate Prisma Client
RUN npx prisma generate

# Copy source code
COPY src ./src

# Build the application
RUN npm run build || ./node_modules/.bin/nest build || npx tsc

# List contents to verify
RUN echo "=== Checking build output ===" && \
    ls -la && \
    ls -la dist/ || echo "No dist folder yet"

# Create required directories
RUN mkdir -p uploads reports

# Create a simple start script inline
RUN echo '#!/bin/sh\n\
if [ ! -f dist/main.js ]; then\n\
  echo "Building..."\n\
  npm run build\n\
fi\n\
if [ -f dist/main.js ]; then\n\
  node dist/main.js\n\
else\n\
  npm run start\n\
fi' > start.sh && chmod +x start.sh

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=5 \
  CMD curl -f http://localhost:3000/health || exit 1

EXPOSE 3000

# Use the start script that handles missing dist
CMD ["./start.sh"]