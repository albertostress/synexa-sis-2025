services:
  # PostgreSQL Database
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: escola_db
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - "../files/postgres-data:/var/lib/postgresql/data"
    networks:
      - dokploy-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d escola_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend NestJS Application
  escola-backend:
    build:
      context: ./escola-backend
      dockerfile: Dockerfile
    environment:
      NODE_ENV: production
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/escola_db
      JWT_SECRET: kiandaedge_jwt_secret_2025_very_secure_key_32chars
      REDIS_HOST: redis
      REDIS_PORT: 6379
      PLAYWRIGHT_SERVICE_URL: http://playwright-service:3005
      SMTP_HOST: ${SMTP_HOST}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      SMTP_FROM: ${SMTP_FROM}
      FRONTEND_URL: https://escola.kiandaedge.online
    volumes:
      - "../files/uploads:/app/uploads"
      - "../files/reports:/app/reports"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    networks:
      - dokploy-network
    expose:
      - 3000
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.kiandaedge.online`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certResolver=letsencrypt"
      - "traefik.http.services.backend.loadbalancer.server.port=3000"
      # CORS headers
      - "traefik.http.middlewares.backend-cors.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,DELETE,PATCH"
      - "traefik.http.middlewares.backend-cors.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.backend-cors.headers.accesscontrolalloworiginlist=https://escola.kiandaedge.online"
      - "traefik.http.middlewares.backend-cors.headers.accesscontrolmaxage=100"
      - "traefik.http.middlewares.backend-cors.headers.addvaryheader=true"
      - "traefik.http.middlewares.backend-cors.headers.accesscontrolallowcredentials=true"
      - "traefik.http.routers.backend.middlewares=backend-cors"

  # Frontend React Application - HARDCODED FOR KIANDAEDGE
  escola-frontend:
    build:
      context: ./escola-frontend
      dockerfile: Dockerfile.kiandaedge
    depends_on:
      - escola-backend
    networks:
      - dokploy-network
    expose:
      - 3001
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`escola.kiandaedge.online`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certResolver=letsencrypt"
      - "traefik.http.services.frontend.loadbalancer.server.port=3001"

  # Redis Cache
  redis:
    image: redis:7-alpine
    command: redis-server --appendonly yes
    volumes:
      - "../files/redis-data:/data"
    networks:
      - dokploy-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Playwright Service for PDF Generation
  playwright-service:
    image: mcr.microsoft.com/playwright:v1.40.0-focal
    command: ["npx", "playwright", "run-server", "--port", "3005"]
    networks:
      - dokploy-network
    expose:
      - 3005

networks:
  dokploy-network:
    external: true